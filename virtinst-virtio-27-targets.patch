commit 4850a02b8d6e2ad511b785a5e2fdc96309c925d1
Author: Cole Robinson <crobinso@redhat.com>
Date:   Tue Jan 31 15:05:36 2012 -0500

    VirtualDisk: Generate usable target for dev > 27

diff --git a/tests/xmlconfig.py b/tests/xmlconfig.py
index 9533ec9..2001b85 100644
--- a/tests/xmlconfig.py
+++ b/tests/xmlconfig.py
@@ -962,5 +962,18 @@ class TestXMLConfig(unittest.TestCase):
                           virtinst.Guest.cpuset_str_to_tuple,
                           conn, "16")
 
+    def testManyVirtio(self):
+        d = VirtualDisk(conn=utils.get_conn(), bus="virtio",
+                        path="/default-pool/testvol1.img")
+
+        targetlist = []
+        for ignore in range(0, (26 * 2) + 1):
+            d.target = None
+            d.generate_target(targetlist)
+            targetlist.append(d.target)
+
+        self.assertEquals("vdaa", targetlist[26])
+        self.assertEquals("vdba", targetlist[26 * 2])
+
 if __name__ == "__main__":
     unittest.main()
diff --git a/virtinst/VirtualDisk.py b/virtinst/VirtualDisk.py
index 018bb5d..a529cd8 100644
--- a/virtinst/VirtualDisk.py
+++ b/virtinst/VirtualDisk.py
@@ -1729,9 +1729,34 @@ class VirtualDisk(VirtualDevice):
                 self.target = "hdc"
                 return self.target
 
+        if maxnode > (26 * 26 * 26):
+            raise RuntimeError("maxnode value is too high")
+
         # Regular scanning
-        for i in range(maxnode):
-            gen_t = "%s%c" % (prefix, ord('a') + i)
+        for i in range(1, maxnode + 1):
+            gen_t = prefix
+
+            tmp = i
+            digits = []
+            for factor in range(0, 3):
+                amt = (tmp % (26 ** (factor + 1))) / (26 ** factor)
+                if amt == 0 and tmp >= (26 ** (factor + 1)):
+                    amt = 26
+                tmp -= amt
+                digits.insert(0, amt)
+
+            seen_valid = False
+            for digit in digits:
+                if digit == 0:
+                    if not seen_valid:
+                        continue
+                    digit = 1
+
+                seen_valid = True
+                gen_t += "%c" % (ord('a') + digit - 1)
+
+            #print i, digits, gen_t
+
             if gen_t in except_targets:
                 continue
             if gen_t not in skip_targets:
