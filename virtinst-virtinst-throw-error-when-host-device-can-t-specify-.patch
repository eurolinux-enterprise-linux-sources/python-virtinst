From 491f2be49ed590ce54021e38ed71c3253bff15a5 Mon Sep 17 00:00:00 2001
From: Guannan Ren <gren@redhat.com>
Date: Fri, 19 Jul 2013 20:58:12 +0800
Subject: [RHEL-6.5 python-virtinst PATCH 3/5] virtinst: throw error when
 --host-device can't specify unique device

Resolves:https://bugzilla.redhat.com/show_bug.cgi?id=861972
(cherry picked from commit 0802cb1add39ca4d276eb7cfc85ee5db02e7f33d)
When there are mutiple USB devices with identical vendorId and
productId, with --host-device <vendorId:productId>, virt-install
fails to specify one.
Currently the virt-install add the first node device with
these vendorId and productId.
This fix will throw out an error when argument to --host-device
can't specify unique node device.

For example:
virt-install ${other args} \
             --host-device <vendorId:productId>
ERROR    15e1:2007 corresponds to multiple node devices

Conflicts:
	tests/clitest.py
---
 virtinst/NodeDeviceParser.py | 22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

diff --git a/virtinst/NodeDeviceParser.py b/virtinst/NodeDeviceParser.py
index 04fc85d..627af06 100644
--- a/virtinst/NodeDeviceParser.py
+++ b/virtinst/NodeDeviceParser.py
@@ -516,14 +516,24 @@ def devAddressToNodedev(conn, addrstr):
     cmp_func, devtype = ret

     # Iterate over node devices and compare
+    count = 0
+    nodedev = None
+
     nodenames = conn.listDevices(devtype, 0)
     for name in nodenames:
-        nodedev = _lookupNodeName(conn, name)
-        if cmp_func(nodedev):
-            return nodedev
-
-    raise ValueError(_("Did not find a matching node device for '%s'") %
-                     addrstr)
+        tmpnode = _lookupNodeName(conn, name)
+        if cmp_func(tmpnode):
+            nodedev = tmpnode
+            count += 1
+
+    if count == 1:
+        return nodedev
+    elif count > 1:
+        raise ValueError(_("%s corresponds to multiple node devices") %
+                         addrstr)
+    elif count < 1:
+        raise ValueError(_("Did not find a matching node device for '%s'") %
+                         addrstr)

 def parse(xml):
     """
-- 
1.8.3.2

